CREATE TABLE ADDRESSES 
(
  ADDRESS_ID NUMBER(10, 0) NOT NULL 
, ADDRESS_LINE1 VARCHAR2(40) 
, ADDRESS_LINE2 VARCHAR2(240) 
, PERSON_ID NUMBER(15, 0) NOT NULL 
, CONSTRAINT ADDRESSES_PK PRIMARY KEY 
  (
    ADDRESS_ID 
  )
  ENABLE 
);

CREATE TABLE ORDERS 
(
  ORDER_ID NUMBER NOT NULL 
, "ORDER_DATE " DATE 
, ORDER_TOTAL NUMBER 
, PERSON_ID NUMBER 
, CONSTRAINT ORDERS_PK PRIMARY KEY 
  (
    ORDER_ID 
  )
  ENABLE 
);

CREATE TABLE PERSONS 
(
  PERSON_ID NUMBER(15, 0) NOT NULL 
, FIRST_NAME VARCHAR2(30 BYTE) 
, LAST_NAME VARCHAR2(30 BYTE) 
, GENDER VARCHAR2(1 BYTE) 
, CONSTRAINT PERSONS_PK PRIMARY KEY 
  (
    PERSON_ID 
  )
  ENABLE 
);

CREATE VIEW PERSON_INFO AS SELECT 
    PERSONS.FIRST_NAME FIRST_NAME, 
    PERSONS.LAST_NAME LAST_NAME, 
    PERSONS.GENDER GENDER, 
    ADDRESSES.ADDRESS_LINE1 ADDRESS_LINE1, 
    ADDRESSES.ADDRESS_ID ADDRESS_ID, 
    ADDRESSES.ADDRESS_LINE2 ADDRESS_LINE2 
FROM 
    ADDRESSES JOIN PERSONS USING (PERSON_ID);

ALTER TABLE ADDRESSES
ADD CONSTRAINT ADDRESSES_PERSONS_FK FOREIGN KEY
(
  PERSON_ID 
)
REFERENCES PERSONS
(
  PERSON_ID 
)
ENABLE;

ALTER TABLE ORDERS
ADD CONSTRAINT ORDERS_FK1 FOREIGN KEY
(
  PERSON_ID 
)
REFERENCES PERSONS
(
  PERSON_ID 
)
ENABLE;

CREATE SEQUENCE PERSONS_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

CREATE TRIGGER PERSONS_TRG 
BEFORE INSERT ON PERSONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.PERSON_ID IS NULL THEN
      SELECT PERSONS_SEQ.NEXTVAL INTO :NEW.PERSON_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
